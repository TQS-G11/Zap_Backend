version: '2.1'
services:
  zap_db:
    image: mysql
    container_name: zap_db
    #restart: always
    environment:
        DB_SERVER_PORT: 3306
        MYSQL_ROOT_PASSWORD: root
        MYSQL_HOST: 'docker-mysql'
        MYSQL_USER: 'user'
        MYSQL_DB: 'deliverize'
    healthcheck:
      test: ["CMD-SHELL", 'mysqladmin ping']
      interval: 10s
      timeout: 2s
      retries: 3
    ports:
      # <Port exposed> : < MySQL Port running inside container>
      - '3306:3306'
    expose:
      - '3306'
    volumes:
      - ./.docker-volumes/mysql/db_data:/var/lib/mysql
    networks:
      - deliverize_backend_i_hate_this

  zap_app:
    container_name: zap_backend
    image: maven-app:latest
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - 8081:8080
    depends_on:
      zap_db:
        condition: service_healthy

    command: ["./mvnw","spring-boot:run"]
    environment:
      - spring.datasource.url=jdbc:mysql://zap_db:3306/mysql
      - spring.datasource.username=root
      - spring.datasource.password=root
      # - spring.jpa.database-platform=org.hibernate.dialect.MySQL5InnoDBDialect
      - spring.jpa.hibernate.ddl-auto=update
    healthcheck:
      test: "curl --fail --silent localhost:8081/actuator/health | grep UP || exit 1"
      interval: 20s
      timeout: 5s
      retries: 5
    volumes:
      - ./.docker-volumes/zap_app/target/:/app/target
    networks:
      - deliverize_backend_i_hate_this

networks:
  deliverize_backend_i_hate_this:
    external: true

